version: '3.4'
networks:
  default:
services:
  nginx-proxy:
    container_name: nginx-proxy
    restart: on-failure
    image: "jwilder/nginx-proxy:alpine"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx/conf.d/proxy.conf:/etc/nginx/conf.d/proxy.conf"
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./nginx/vhost.d:/etc/nginx/vhost.d"
      - "./nginx/ssl/certs:/etc/nginx/certs"
      - "./nginx/html:/usr/share/nginx/html"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
    networks:
      default:
        aliases:
          - $HOST_MOD
          - $HOST_VIR
          - $HOST_OLAP
          - $HOST_CUBE
          - $HOST_JSAPI
          - $HOST_DTVIZ
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
  letsencrypt-nginx-proxy-companion:
    container_name: nginx-proxy-letsencrypt-sidecar
    image: "jrcs/letsencrypt-nginx-proxy-companion:latest"
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - "./nginx/conf.d/proxy.conf:/etc/nginx/conf.d/proxy.conf"
      - "./nginx/vhost.d:/etc/nginx/vhost.d"
      - "./nginx/ssl/certs:/etc/nginx/certs"
      - "./nginx/html:/usr/share/nginx/html"
      - "./nginx/htpasswd:/etc/nginx/htpasswd"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on:
      - nginx-proxy
  moodle:
    restart: always
    hostname: $HOST_MOD
    container_name: moodle
    build: ./docker-moodle
    volumes:
      - "./moodle_data/mysql:/var/lib/mysql"
      - "./moodle_data/moodledata:/var/moodledata"
      - "./moodle_data/config.php:/var/www/html/moodle/config.php"
    ports:
      - "8002:80"      
    environment:
      - HOST=${HOST_MOD}
      - SITE_HOST=${HOST_MOD}
      - SITE_SCHEME=https://
      - VIRTUAL_HOST=${HOST_MOD}
      - VIRTUAL_PROTO=http
      - LETSENCRYPT_HOST=${HOST_MOD}
      - LETSENCRYPT_EMAIL="dev@derilinx.com"
      - MYSQL_PASSWORD=${MYSQL_PASSWORD_MOODLE}
      - MOODLE_PASSWORD=${MOODLE_PASSWORD}
      - SSH_PASSWORD=${SSH_PASSWORD_MOODLE}
  virtuoso:
    restart: always
    hostname: $HOST_VIR
    image: tenforce/virtuoso:1.3.1-virtuoso7.2.2
    environment:
      - SITE_SCHEME=https://
      - SPARQL_UPDATE="true"
      - DEFAULT_GRAPH="http://www.example.com/my-graph"
      - VIRTUAL_HOST=${HOST_VIR}
      - VIRTUAL_PROTO=http
      - VIRTUAL_PORT=8890
      - HOST=${HOST_VIR}
      - SITE_HOST=${HOST_VIR}
      - LETSENCRYPT_HOST=${HOST_VIR}
      - LETSENCRYPT_EMAIL="dev@derilinx.com"
    volumes:
      - "./data/virtuoso:/data"
    ports:
      - "8890:8890"
  virtuoso-statbank:
    restart: always
    hostname: $HOST_VIR_STAT
    image: tenforce/virtuoso:1.3.1-virtuoso7.2.2
    environment:
      - SITE_SCHEME=https://
      - SPARQL_UPDATE="true"
      - DEFAULT_GRAPH="http://www.example.com/my-graph"
      - VIRTUAL_HOST=${HOST_VIR_STAT}
      - VIRTUAL_PROTO=http
      - VIRTUAL_PORT=8890
      - HOST=${HOST_VIR_STAT}
      - SITE_HOST=${HOST_VIR_STAT}
      - LETSENCRYPT_HOST=${HOST_VIR_STAT}
      - LETSENCRYPT_EMAIL="dev@derilinx.com"
    volumes:
      - "./data/virtuoso_stat:/data"
    ports:
      - "8899:8890"
  olap:
    restart: on-failure
    hostname: $HOST_OLAP
    logging:
      driver: "json-file"
      options:
        max-size: 50m
    ports:
      - "8000:8000"
    build:
      context: ./docker-olap-browser
      dockerfile: Dockerfile
    environment:
      - HOST=${HOST_OLAP}
      - SITE_HOST=${HOST_OLAP}
      - SITE_SCHEME=https://
      - VIRTUAL_HOST=${HOST_OLAP}
      - VIRTUAL_PROTO=http
      - LETSENCRYPT_HOST=${HOST_OLAP}
      - LETSENCRYPT_EMAIL="dev@derilinx.com"
  cubeviz:
    restart: on-failure
    hostname: $HOST_CUBE
    logging:
      driver: "json-file"
      options:
        max-size: 50m
    ports:
      - "8001:8000"
    build:
      context: ./docker-cube-visualizer
      dockerfile: Dockerfile
    environment:
      - HOST=${HOST_CUBE}
      - SITE_HOST=${HOST_CUBE}
      - SITE_SCHEME=https://
      - VIRTUAL_HOST=${HOST_CUBE}
      - VIRTUAL_PROTO=http
      - LETSENCRYPT_HOST=${HOST_CUBE}
      - LETSENCRYPT_EMAIL="dev@derilinx.com"
  json-qb:
    restart: on-failure
    hostname: $HOST_JSAPI
    logging:
      driver: "json-file"
      options:
        max-size: 50m
    ports:
      - "8003:8000"
    build:
      context: ./docker-json-qb-api
      dockerfile: Dockerfile
    environment:
      - HOST=${HOST_JSAPI}
      - SITE_HOST=${HOST_JSAPI}
      - SITE_SCHEME=https://
      - VIRTUAL_HOST=${HOST_JSAPI}
      - VIRTUAL_PROTO=http
      - LETSENCRYPT_HOST=${HOST_JSAPI}
      - LETSENCRYPT_EMAIL="dev@derilinx.com"
  dataviz:
    restart: on-failure
    hostname: $HOST_DTVIZ
    logging:
      driver: "json-file"
      options:
        max-size: 50m
    ports:
      - "8004:5000"
    build:
      context: ./docker-dataviz
      dockerfile: Dockerfile
    environment:
      - HOST=${HOST_DTVIZ}
      - SITE_HOST=${HOST_DTVIZ}
      - SITE_SCHEME=https://
      - VIRTUAL_HOST=${HOST_DTVIZ}
      - VIRTUAL_PROTO=http
      - LETSENCRYPT_HOST=${HOST_DTVIZ}
      - LETSENCRYPT_EMAIL="dev@derilinx.com"
      - sparql_username=${SPARQL_USERNAME}
      - sparql_pwd=${SPARQL_PWD}
    volumes:
      - "./docker-dataviz/cso-DataViz:/cso-DataViz"
  juma:
    restart: always
    hostname: $HOST_JUMA
    logging:
      driver: "json-file"
      options:
        max-size: 50m
    ports:
      - "8005:8889"
    build:
      context: ./juma-losd-docker_sp/Juma-losd-docker_sp
      dockerfile: Dockerfile
    environment:
      - HOST=${HOST_JUMA}
      - SITE_HOST=${HOST_JUMA}
      - SITE_SCHEME=https://
      - VIRTUAL_HOST=${HOST_JUMA}
      - VIRTUAL_PROTO=http
      - LETSENCRYPT_HOST=${HOST_JUMA}
      - LETSENCRYPT_EMAIL="dev@derilinx.com"
    volumes:
      - "./mysqldata/mysql:/var/lib/mysql"
      - "./mysqldata/mysql-files:/var/lib/mysql-files"
      - "./mysqldata/mysql-keyring:/var/liv/mysql-keyring"
      - "./juma-losd-docker_sp/Juma-losd-docker_sp/juma-uplift-master/userfiles:/juma/juma-uplift-master/userfiles"
      - "./juma-losd-docker_sp/Juma-losd-docker_sp/juma-api/index.php:/var/www/html/juma-api/index.php"
  rdfconv_api:
    restart: on-failure
    hostname: $HOST_RDFAPI
    logging:
      driver: "json-file"
      options:
        max-size: 50m
    ports:
      - "8006:5000"
    build:
      context: ./docker-rdfapi
      dockerfile: Dockerfile
    environment:
      - HOST=${HOST_RDFAPI}
      - SITE_HOST=${HOST_RDFAPI}
      - SITE_SCHEME=https://
      - VIRTUAL_HOST=${HOST_RDFAPI}
      - VIRTUAL_PROTO=uwsgi
      - LETSENCRYPT_HOST=${HOST_RDFAPI}
      - LETSENCRYPT_EMAIL="dev@derilinx.com"
      - RDFAPI_USERNAME=${RDFAPI_USERNAME}
      - RDFAPI_PWD=${RDFAPI_PWD}
    volumes:
      - "./docker-rdfapi/LOSD-RDFconverterAPI:/LOSD-RDFconverterAPI"
